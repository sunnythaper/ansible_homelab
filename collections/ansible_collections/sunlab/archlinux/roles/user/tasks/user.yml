---
- name: Create & configure users
  become: true
  ansible.builtin.user:
    append: '{{ item.append | default(omit) }}'
    comment: '{{ item.comment | default(omit) }}'
    create_home: '{{ item.create_home | default(false) }}'
    expires: '{{ item.expires | default(omit) }}'
    force: '{{ item.force | default(false) }}'
    generate_ssh_key: '{{ item.generate_ssh_key | default(false) }}'
    group: '{{ item.group | default(omit) }}'
    groups: '{{ item.groups | default(omit) }}'
    home: '{{ item.home | default(omit) }}'
    move_home: '{{ item.move_home | default(false) }}'
    name: '{{ item.name }}'
    non_unique: '{{ item.non_unique | default(false) }}'
    password: '{{ item.password | default(omit) }}'
    password_expire_max: '{{ item.password_expire_max | default(omit) }}'
    password_expire_min: '{{ item.password_expire_min | default(omit) }}'
    password_lock: '{{ item.password_lock | default(omit) }}'
    remove: '{{ item.remove | default(false) }}'
    shell: '{{ item.shell | default("/bin/bash") }}'
    skeleton: '{{ item.skeleton | default(omit) }}'
    ssh_key_bits: '{{ item.ssh_key_bits | default(omit) }}'
    ssh_key_comment: '{{ item.ssh_key_comment | default(omit) }}'
    ssh_key_file: '{{ item.ssh_key_file | default(omit) }}'
    ssh_key_passphrase: '{{ item.ssh_key_passphrase | default(omit) }}'
    ssh_key_type: '{{ item.ssh_key_type | default(omit) }}'
    state: '{{ item.state | default("present") }}'
    system: '{{ item.system | default(false) }}'
    uid: '{{ item.uid | default(omit) }}'
    umask: '{{ item.umask | default(omit) }}'
    update_password: '{{ item.update_password | default("always") }}'
  with_items: "{{ user_users }}"
  when: user_users is defined
  tags:
    - default
    - add-user

- name: Configure users to run a passwordless sudo command
  become: true
  ansible.builtin.lineinfile:
    create: yes
    line: '{{ item.name }} ALL=(ALL) NOPASSWD: {{ item.command }}'
    path: '{{ user_sudoers_path }}/11-passwordless-sudo-{{ item.name }}'
    validate: '{{ user_passwordless_sudo_users_validate }}'
    owner: root
    group: root
    mode: '{{ user_sudoers_config_mode }}'
  with_items: '{{ user_passwordless_sudo_users }}'
  when: user_passwordless_sudo_users is defined
  tags:
    - default
    - add-user